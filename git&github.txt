Git - is a free and open source version control system
Version control System - is a software tool which help to track changes in code.
1. Tracks history.
2. helps to collaborate.
3. fast and scalable.

# using git :-
popular way to use git is through commandLine (faster)
IDE/codeEditor like VS-CODE via extensions
GUI

# configuring git : storing our details in git is called configuring
git config --global user.name "Anjali17aj"
git config --global user.email "sayhellotoanjali@gmail.com"
git config --list

# Using git through our VS-CODE:
VS-CODE 
Terminal is same as commandLine
local machine is our laptop

# Basic git Commands
cd 
ls
>Git Clone:
git clone paste link       // github repo from code -> html link

ls
ls -a

git status
git add .          or       git add fileName
git commit -m "Added a message"
git push origin main

#  from our local system 
git init
git add README.md
ls -la   //for .git
ls 
git status // on branch main untracked files
git add .      or       git add fileName
git status // on branch main changes to be committed NewFile
git commit -m "Added a message"
git status               //on branch main, nothing to commit working tree clean
git remote add origin pasteLink
git remote -v  //* to verify remote
git branch //to check branch 
git branch -M features //*to change branch name
git push origin main     or git push -u origin main

# changing in an existing project in github
git status
git add .       or  git push -u origin main
git commit -m "added this"
git push origin main      or git commit -am "added this"
git push
(no need to write --> git push -u origin main <-- repeatedly if you have used git command git push -u origin main just use git push)

# summary 
github - code changes --> commit
local git - code changes --> add (stage changes) --> commit --> push

#branch Commands
git branch     //to check branchName
git branch -M main //to rename branch
git checkout branchName  // to navigate
git checkout -b newBranchName // to create new branch
git branch -d branchName    // to delete a branch

#merging branch
git status
git add . 
git commit -m "added this"
git status     //on branch feature nothing to commit working tree clean
git checkout main  ///switched to branch main
git branch 
git push  //everything upto date main branch code is getting pushed 
git checkout feature 
git push --set-upstream origin feature    //origin mei feature name ki branch mei code push krna chahte h 

# pull request.
//merging 2 branches 
//for merging code in the main branch from our branch code
git diff branchName //to compare commits, branches, files and more 
git merge branchName  /// to merge 2 branch

or create a pull request manually

or 
git branch 
git diff main 
git merge main

# conflicts 
the branch in which we are working is supposed to be present in our local system and when we merge it with the main branch in github then it got merged 
but we don't get to see it available in our local system. So for that we use pull command.
git pull origin main

# merge conflicts
Case 1 :git Staged changes
   reset fileName with extension
Case 2: Committed changes(for one commit)
   git reset HEAD~1
Case 3: Committed changes (for many commits)
   git log 
   git reset hash 
   git reset --hard hash     //hard means forcefully removing changes 

   # forking
   Step 1: fork 
   step 2: do editings. 
   step 3: pull request from menubar


Github - is a website where we host repositories online.
README.md - marking down words and sentences to read

commit is change 
steps to commit:-
1.add changes
2. commit

green-> add
red->modified








